apply plugin: 'java'
import org.apache.tools.ant.taskdefs.condition.Os
apply plugin: 'application'

version = '1.0'

task initDb(type:Exec) {
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		def varsArray = System.getenv("LS_DBCONN_TEST_SQLSRV").split(";")
		def credentials = new String[4]
		for (def i = 0; i < 4; i++) {
			credentials.putAt(i, varsArray[i].split("=")[1])
		}

		commandLine "sqlcmd", "-S", credentials[0], "-U", credentials[2], "-P", credentials[3], "-d", credentials[1], "-i", "scripts\\Table_Creation_Script.sql"
	}else{
		commandLine "echo", "The current OS canÂ´t exexute the setup command to execute initDB.Please do it yourself!"
	}
}

dependencies {
    compile fileTree(dir: 'vendor/main', include: '*.jar')
    testCompile fileTree(dir: 'vendor/test', include: '*.jar')
}

mainClassName = "pt.isel.ls.App"
// 'copyTask', 'startScripts'
task stage(dependsOn: ['clean','installApp'])

//Heroku related
/*
task copyTask(type: Copy) {
	dependsOn installApp
	from 'src/main/resources'
	into 'build/install/1617-1-LI41N-G2/lib/resources'
}
*/
/*
startScripts {
  doLast {
  		printf buildscript.sourceFile.getParent()
    def windowsScriptFile = file getWindowsScript()
    def unixScriptFile    = file getUnixScript()
    windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\1617-1-LI41N-G2-1.0.jar', '%APP_HOME%\\lib\\1617-1-LI41N-G2-1.0.jar:%APP_HOME%\\lib\\resources\\main')
    unixScriptFile.text  = unixScriptFile.text.replace('$APP_HOME/lib/1617-1-LI41N-G2-1.0.jar', '$APP_HOME/lib/1617-1-LI41N-G2-1.0.jar:%APP_HOME%/lib/resources/main')
  }
}
*/
test.dependsOn initDb
